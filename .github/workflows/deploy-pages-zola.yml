name: Zola Image Builder

env:
  SRC_DIR: ${{ github.workspace }}/zola
  SELF_TOKEN: ${{ github.token }}

on: push

jobs:



  build:
    name: Build zola to static site
    runs-on: ubuntu-latest

    steps:

      # checkout source
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: ${{ env.SRC_DIR }}
          submodules: "recursive"
          token: |
            ${{ env.SELF_TOKEN }}

      # build
      - name: build
        working-directory: ${{ env.SRC_DIR }}
        run: |
          ./build.sh

      # upload built artifact
      - name: upload built artifact
        uses: actions/upload-artifact@v3
        with:
          name: pages-artifact
          path: ${{ env.SRC_DIR }}/public
          retention-days: 1



  pages:
    name: Push zola site to the gh-pages branch
    runs-on: ubuntu-latest
    needs: build

    # build & deploy are triggered only on default branch
    if: github.ref_name == github.event.repository.default_branch

    env:
      # GitHub personal account token secret to push to repository
      GH_PAGES_DIR: ${{ github.workspace }}/gh-pages
      NEW_GH_PAGES_DIR: ${{ github.workspace }}/new-gh-pages


    steps:

      # checkout source
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: ${{ env.GH_PAGES_DIR }}
          submodules: "recursive"
          token: |
            ${{ env.SELF_TOKEN }}

      # set git commit config
      - name: git set config
        env:
          USER_NAME: ${{ github.event.pusher.name }}
          USER_EMAIL: ${{ github.event.pusher.email }}
        run: |
          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USER_NAME"

      # get built artifact
      - name: get built artifact
        uses: actions/download-artifact@v3
        with:
          name: pages-artifact
          path: ${{ env.SRC_DIR }}

      # make new gh-pages directory
      - name: directory for new gh-pages
        run: |
          mkdir -p "${{ env.NEW_GH_PAGES_DIR }}"

      # commit built output to gh-pages branch, then push
      - name: push to gh-pages
        working-directory: ${{ env.NEW_GH_PAGES_DIR }}
        run: |

          # get last git log, then switch GH_PAGES_DIR to gh-pages
          LAST_GIT_COMMIT_MSG="$(git -C "${{ env.GH_PAGES_DIR }}" log --format=%B -n 1)"
          git -C "${{ env.GH_PAGES_DIR }}" switch -c gh-pages

          # init NEW_GH_PAGES_DIR files
          cp -af "${{ env.GH_PAGES_DIR }}/.git" ./
          cp -af "${{ env.SRC_DIR }}"/. ./

          # push newly built gh-pages
          git add .
          git commit -m "$LAST_GIT_COMMIT_MSG" || true
          git push -u -f "https://${SELF_TOKEN}@github.com/${{ github.repository }}.git" gh-pages

