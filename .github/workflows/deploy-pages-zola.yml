name: Zola Pages Builder

env:
  # configurable envs

  #   [Build]
  ALPINE_VER: ${{ secrets.ALPINE_VER }}
  ZOLA_VER: ${{ secrets.ZOLA_VER }}
  ZOLA_BASE_URL: ${{ secrets.ZOLA_BASE_URL }}
  MINIFY_VER: ${{ secrets.MINIFY_VER }}
  MINIFY_ARGS: ${{ secrets.MINIFY_ARGS }}
  NO_MINIFY: ${{ secrets.NO_MINIFY }}
  GZIP_TARGET_EXTENSIONS: ${{ secrets.GZIP_TARGET_EXTENSIONS }}
  GZIP_COMPRESSION_LEVEL: ${{ secrets.GZIP_COMPRESSION_LEVEL }}

  #   [Push] (remote location: ${REPO_PROTOCOL}://${REPO_ID}${REPO_PW}@${REPO_HOST}/${REPO})
  REPO_PROTOCOL: ${{ secrets.REPO_PROTOCOL }}
  REPO_HOST: ${{ secrets.REPO_HOST }}
  REPO: ${{ secrets.REPO }}
  REPO_BRANCH: ${{ secrets.REPO_BRANCH }}
  REPO_ID: ${{ secrets.REPO_ID }}
  REPO_PW: ${{ secrets.REPO_PW }}
  REPO_KEY: ${{ secrets.REPO_KEY }}



  # global envs
  SRC_DIR: ${{ github.workspace }}/zola
  PAGES_DIR: ${{ github.workspace }}/pages
  SELF_TOKEN: ${{ github.token }}


on: push

jobs:



  build:
    name: Build zola to static site
    runs-on: ubuntu-latest

    steps:

      # checkout source
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: ${{ env.SRC_DIR }}
          submodules: "recursive"
          token: |
            ${{ env.SELF_TOKEN }}

      # build
      - name: build
        working-directory: ${{ env.SRC_DIR }}
        run: |
          rm -rf static/docs
          ALPINE_VER="${ALPINE_VER}" \
          ZOLA_VER="${ZOLA_VER}" \
          ZOLA_BASE_URL="${ZOLA_BASE_URL}" \
          MINIFY_VER="${MINIFY_VER}" \
          MINIFY_ARGS="${MINIFY_ARGS}" \
          NO_MINIFY="${NO_MINIFY}" \
          GZIP_TARGET_EXTENSIONS="${GZIP_TARGET_EXTENSIONS}" \
          GZIP_COMPRESSION_LEVEL="${GZIP_COMPRESSION_LEVEL}" \
          OUTPUT_DIR="static/docs" \
          ./build.sh

      # upload built artifact
      - name: upload built artifact
        uses: actions/upload-artifact@v3
        with:
          name: pages-artifact
          path: ${{ env.SRC_DIR }}/static/docs
          retention-days: 1



  pages:
    name: Push zola site to the pages branch
    runs-on: ubuntu-latest
    needs: build

    # build & deploy are triggered only on default branch
    if: github.ref_name == github.event.repository.default_branch

    steps:

      # set git commit config
      - name: set git config
        env:
          USER_NAME: ${{ github.event.pusher.name }}
          USER_EMAIL: ${{ github.event.pusher.email }}
        run: |
          git config --global user.name "$USER_NAME"
          git config --global user.email "$USER_EMAIL"

      # checkout source
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: ${{ env.SRC_DIR }}
          submodules: "recursive"
          token: |
            ${{ env.SELF_TOKEN }}

      # initialize pages branch to push
      - name: init directory for pages branch
        run: |

          # clone from target repo
          if [ -z "${REPO_HOST}" ] && [ -z "${REPO}" ]
          then
            cp -af "${SRC_DIR}" "${PAGES_DIR}"
          else
            # if https: use SELF_TOKEN as id by default
            [ "${REPO_PROTOCOL}" = "https" ] && REPO_ID="${REPO_ID:-${SELF_TOKEN}}"
            
            mkdir -p "${PAGES_DIR}"
            REPO_PROTOCOL="${REPO_PROTOCOL:-ssh}" \
            REPO_HOST="${REPO_HOST:-$(echo ${{ github.server_url }} | sed 's/^[^\/]*\/\/\(.*\)/\1/')}" \
            REPO="${REPO:-${{ github.repository }}}" \
            REPO_ID="${REPO_ID:-git}" \
            REPO_PW="${REPO_ID:+${REPO_PW}}" \
            REPO_KEY="${REPO_KEY}" \
            LOCAL_GIT_TARGET_DIR="${PAGES_DIR}" \
            "${SRC_DIR}"/.ci-scripts/clone-from-repo.sh
          fi

          # switch to clean pages branch
          REPO_BRANCH="${REPO_BRANCH:-pages}" \
          LOCAL_GIT_TARGET_DIR="${PAGES_DIR}" \
          "${SRC_DIR}"/.ci-scripts/init-clean-branch.sh

          # set root static files of pages branch
          if [ -d "${SRC_DIR}/static" ]
          then
            cp -af "${SRC_DIR}/static/." "${PAGES_DIR}/"
          fi
          rm -rf "${PAGES_DIR}/docs"
          
      # get built artifact in pages branch
      - name: download built artifact to pages branch
        uses: actions/download-artifact@v3
        with:
          name: pages-artifact
          path: ${{ env.PAGES_DIR }}/docs

      # commit built output to pages branch, then push
      - name: push to pages branch
        run: |

          # if push to current repo: https by default
          [ -z "${REPO_HOST}" ] && [ -z "${REPO}" ] && REPO_PROTOCOL="${REPO_PROTOCOL:-https}"

          # if https: use SELF_TOKEN as id by default
          [ "${REPO_PROTOCOL}" = "https" ] && REPO_ID="${REPO_ID:-${SELF_TOKEN}}"
          
          # push to target repo
          REPO_PROTOCOL="${REPO_PROTOCOL:-ssh}" \
          REPO_HOST="${REPO_HOST:-$(echo ${{ github.server_url }} | sed 's/^[^\/]*\/\/\(.*\)/\1/')}" \
          REPO="${REPO:-${{ github.repository }}}" \
          REPO_BRANCH="${REPO_BRANCH:-pages}" \
          REPO_ID="${REPO_ID:-git}" \
          REPO_PW="${REPO_ID:+${REPO_PW}}" \
          REPO_KEY="${REPO_KEY}" \
          LOCAL_GIT_TARGET_DIR="${PAGES_DIR}" \
          LOCAL_GIT_NEW_COMMIT_MSG="${{ github.event.head_commit.message }}" \
          "${SRC_DIR}"/.ci-scripts/push-changes-to-repo.sh
